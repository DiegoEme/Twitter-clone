[{"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\index.js":"1","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\reportWebVitals.js":"2","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\components\\App.js":"3","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\myBase.js":"4","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\components\\Router.js":"5","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\components\\Navigation.js":"6","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\routes\\Home.js":"7","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\routes\\Auth.js":"8","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\components\\Tweet.js":"9","C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\routes\\Profile.js":"10","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\index.js":"11","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\reportWebVitals.js":"12","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\components\\App.js":"13","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\myBase.js":"14","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\components\\Router.js":"15","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\components\\Navigation.js":"16","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\routes\\Home.js":"17","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\routes\\Auth.js":"18","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\routes\\Profile.js":"19","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\components\\Tweet.js":"20"},{"size":507,"mtime":1616384009948,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1616384010000,"results":"23","hashOfConfig":"22"},{"size":724,"mtime":1616384009946,"results":"24","hashOfConfig":"22"},{"size":643,"mtime":1616384009960,"results":"25","hashOfConfig":"22"},{"size":921,"mtime":1616384009947,"results":"26","hashOfConfig":"22"},{"size":331,"mtime":1616384009947,"results":"27","hashOfConfig":"22"},{"size":1862,"mtime":1616384010020,"results":"28","hashOfConfig":"22"},{"size":2319,"mtime":1616384010006,"results":"29","hashOfConfig":"22"},{"size":1569,"mtime":1616384009948,"results":"30","hashOfConfig":"22"},{"size":286,"mtime":1616386339231,"results":"31","hashOfConfig":"22"},{"size":507,"mtime":1616384009948,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1616384010000,"results":"34","hashOfConfig":"33"},{"size":1158,"mtime":1618461726037,"results":"35","hashOfConfig":"33"},{"size":722,"mtime":1618454265444,"results":"36","hashOfConfig":"33"},{"size":1007,"mtime":1618461366312,"results":"37","hashOfConfig":"33"},{"size":367,"mtime":1618459582448,"results":"38","hashOfConfig":"33"},{"size":2905,"mtime":1618458569789,"results":"39","hashOfConfig":"33"},{"size":2319,"mtime":1616384010006,"results":"40","hashOfConfig":"33"},{"size":1619,"mtime":1618461366322,"results":"41","hashOfConfig":"33"},{"size":1764,"mtime":1618457793998,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1gau3qr",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"t4u1db",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\index.js",[],["88","89"],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\reportWebVitals.js",[],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\components\\App.js",[],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\myBase.js",[],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\components\\Router.js",[],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\components\\Navigation.js",[],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\routes\\Home.js",[],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\routes\\Auth.js",[],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\components\\Tweet.js",[],"C:\\Users\\USUARIO\\documents\\twitter-clone\\Twitter-clone\\src\\routes\\Profile.js",[],"C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\index.js",[],["90","91"],"C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\reportWebVitals.js",[],"C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\components\\App.js",[],"C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\myBase.js",[],"C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\components\\Router.js",[],"C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\components\\Navigation.js",[],"C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\routes\\Home.js",["92"],"import React, { useState, useEffect } from \"react\";\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { dbService, storageService } from \"myBase\";\r\nimport Tweet from \"components/Tweet\";\r\n\r\nconst Home = ({userObject}) => {\r\n  \r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [tweets, setTweets] = useState([]);\r\n  const [pic, setPic] = useState(\"\");\r\n\r\n /*  const getTweets = async () => {\r\n    const dbTweets = await dbService.collection(\"tweets\").get();\r\n    dbTweets.forEach((doc) => {\r\n      const tweetObject = {\r\n        ...doc.data(),\r\n        id: doc.id,\r\n        \r\n      }\r\n      setTweets((prev) => {\r\n        return [tweetObject, ...prev]\r\n      })\r\n    })\r\n  }; */\r\n\r\n  useEffect(() => {\r\n   // getTweets(); Not used beacause snapshot is used\r\n    //event listener that gets triggered when the db is changed\r\n    //Realtime tweets\r\n    dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n      const tweetsArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        data: doc.data(),\r\n      }));\r\n      setTweets(tweetsArray);\r\n    })\r\n  }, []);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let picUrl = \"\";\r\n\r\n    if(pic !== \"\"){\r\n      const fileRef = storageService\r\n      .ref()\r\n      .child(`${userObject.uid}/${uuidv4()}`)\r\n      const response = await fileRef.putString(pic, \"data_url\");\r\n      picUrl = await response.ref.getDownloadURL();\r\n    }\r\n \r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObject.uid,\r\n      picUrl\r\n    }\r\n\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n    setPic(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    let value = event.target.value;\r\n    setTweet(value);\r\n  };\r\n\r\n  console.log(tweets)\r\n\r\n  const onFileChange = (e) => {\r\n    let files = e.target.files\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishEvent) => {\r\n      //console.log(finishEvent);\r\n      setPic(finishEvent.target.result)\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n\r\n\r\n  }\r\n\r\n  const onClearPic = () => setPic(null);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Whats on your mind\"\r\n          maxLength={140}\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/> \r\n        <input type=\"submit\" value=\"Tweet\" />\r\n        {pic && (\r\n          <div>\r\n            <img src={pic} width=\"50px\"  height=\"50px\"/>\r\n            <button onClick={onClearPic}>Clear </button>\r\n          </div>        \r\n        )}\r\n      </form>\r\n      <div>\r\n        {tweets.map((tweet) => (\r\n          <Tweet key={tweet.id} isOwner={tweet.data.creatorId === userObject.uid} tweetObject={tweet}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\routes\\Auth.js",[],"C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\routes\\Profile.js",["93"],"import React, {useEffect, useState} from 'react';\r\nimport authService, { dbService } from 'myBase';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction Profile({refreshUser, userObject}) {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\r\n    \r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const getMyTweets = async () => {\r\n        const tweets = await dbService\r\n        .collection(\"tweets\")\r\n        .where(\"creatorId\", \"==\", userObject.uid)\r\n        .get();\r\n        console.log(tweets.docs.map(doc => doc.data()));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyTweets()\r\n    }, [])\r\n\r\n\r\n    const onChange = (event) => {\r\n        const value = event.target.value;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObject.displayName !== newDisplayName){\r\n           await userObject.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit = {onSubmit}>\r\n                <input \r\n                    onChange={onChange}\r\n                    value={newDisplayName}\r\n                    type=\"text\" \r\n                    placeholder=\"display name\"\r\n                />\r\n                <input type=\"submit\" value=\"Update profile\"/>\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\USUARIO\\Documents\\twitter-clone\\Twitter-clone\\src\\components\\Tweet.js",["94"],"import React from \"react\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Tweet({ tweetObject, isOwner }) {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObject.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const confirm = window.confirm(\"Are you sure you wanna delete the tweet?\");\r\n    if (confirm) {\r\n      await dbService.doc(`tweets/${tweetObject.id}`).delete();\r\n      await storageService.refFromURL(tweetObject.picUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObject.id}`).update({\r\n        text: newTweet\r\n    })\r\n    setEditing(false)\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    const newText = event.target.value;\r\n    setNewTweet(newText);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n          <>\r\n        {isOwner && (<><form onSubmit={onSubmit}>\r\n          <input \r\n          onChange={onChange}\r\n          type=\"text\" \r\n          placeholder=\"Edit Tweet\" \r\n          value={newTweet} \r\n          required />\r\n          <input type=\"submit\" value=\"Update\"/>\r\n        </form>\r\n        <button onClick={toggleEditing}>Cancel</button></>)}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObject.data.text}</h4>\r\n          {tweetObject.data.picUrl && <img width=\"50px\" src={tweetObject.data.picUrl}/>}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete</button>\r\n              <button onClick={toggleEditing}>Edit</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweet;\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":99,"column":13,"nodeType":"103","endLine":99,"endColumn":57},{"ruleId":"104","severity":1,"message":"105","line":24,"column":8,"nodeType":"106","endLine":24,"endColumn":10,"suggestions":"107"},{"ruleId":"101","severity":1,"message":"102","line":50,"column":39,"nodeType":"103","endLine":50,"endColumn":88},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyTweets'. Either include it or remove the dependency array.","ArrayExpression",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [getMyTweets]",{"range":"113","text":"114"},[708,710],"[getMyTweets]"]